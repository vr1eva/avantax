/**
 * This code was generated by v0 by Vercel.
 * @see https://v0.dev/t/FOrHZl4w6KG
 */
"use client"

import { Button } from "@/components/ui/button"
import { QUICK_REPLIES } from "@/assets/constants"
import { useState } from "react"
import { Separator } from "@radix-ui/react-separator"
import Link from "next/link"
import { Input } from "@/components/ui/input"

export default function Chat() {
  const [chatIsVisible, setChatIsVisible] = useState(true)
  if (!chatIsVisible) {
    const classNames = {
      closedChat: `bg-light fixed bottom-10 right-[10px] max-w-[400px] px-[29px] py-[11px] rounded-5 cursor-pointer rounded-[20px] hover:bg-beige`
    }
    return <div onClick={() => setChatIsVisible(true)} className={classNames.closedChat}>Agendar una cita</div>
  }
  const classNames = {
    chat: `bg-light fixed bottom-10 right-[10px] max-w-[400px]`,
    status: `flex gap-2 items-center`,
    statusLed: `w-4 h-4 bg-green rounded-full`,
    statusLabel: `font-light text-[14px] leading-[31px]`
  }
  return (
    <div className={`${classNames.chat} flex flex-col h-[500px] rounded-lg border`}>
      <div className="flex flex-col flex-1 border-b">
        <div className="flex items-center p-4 space-x-4 border-b">
          <div className="flex-1">
            <h1 className="text-xl font-semibold">AvantaxGPT</h1>
            <div className={classNames.status}>
              <span className={classNames.statusLed}></span><p className={classNames.statusLabel}>Disponible ahora</p>
            </div>
          </div>
          <Button onClick={() => setChatIsVisible(false)}>Cerrar</Button>
        </div>
        <div className="p-4 flex-1 flex flex-col gap-4 items-end">
          <div className="rounded-xl bg-gray-100 dark:bg-gray-800 p-4 max-w-xs self-start">
            <div className="text-sm font-semibold">AvantaxGPT</div>
            <div className="mt-2">Hola! Como puedo ayudarte hoy?</div>
            <Separator className="bg-light" />
            <div className="mt-2 text-sm text-gray-500 dark:text-gray-400">
              <div />
            </div>
          </div>
          {QUICK_REPLIES.map(reply => (
            <div key={reply.label} className="rounded-xl bg-gray-100 dark:bg-gray-800 p-4 max-w-xs cursor-pointer hover:bg-beige">
              <QuickReply reply={reply} />
            </div>
          ))}
        </div>
      </div>
    </div>
  )
}

function QuickReply({ reply }) {
  const [formMode, setFormMode] = useState(false)
  if (reply.type === "consulta") {
    return (
      <div>
        <Link href={reply.href} className="mt-2">{reply.label}</Link>
      </div>
    )
  } else if (reply.type === "cotizacion") {
    return (
      <div>
        {formMode ? <form>
          <Input placeholder="RazÃ³n social" />
          <Input placeholder="RUC" />
          <Input placeholder="Correo electronico" />
          <Input placeholder="Nombre" />
          <Input placeholder="Monto interesado en financiar" />
        </form> : <div onClick={() => setFormMode(true)} className="mt-2">{reply.label}</div>}
      </div>
    )
  } else if (reply.type === "cita") {
    return (
      <div>
        <Link href={reply.href} className="mt-2">{reply.label}</Link>
      </div>
    )
  }

}